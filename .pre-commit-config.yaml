# Purpose: Pre-commit hooks configuration for code quality enforcement
# Scope: Repository-wide automated code quality checks before commits and pushes
# Overview: Configures pre-commit hooks to run comprehensive linting on changed files during commit,
#     and full linting + testing on entire codebase during push. All linting uses Makefile targets
#     with FILES parameter for consistency between manual runs, pre-commit hooks, and CI/CD.
# Dependencies: pre-commit, poetry, make, python 3.9+
# Exports: Pre-commit hook configuration for the repository
# Interfaces: Triggered automatically on git commit and git push, can be run manually with pre-commit run
# Environment: Development, requires Poetry virtualenv with all dev dependencies installed
# Related: Makefile (format, lint-full with FILES=changed, test targets)
# Implementation: Branch protection, format, then just lint-full FILES=changed (pre-commit) or just lint-full + test (pre-push)

repos:
  - repo: local
    hooks:
      # ============================================================================
      # BRANCH PROTECTION - Must run first, prevents commits to protected branches
      # ============================================================================
      - id: no-commit-to-main
        name: Prevent commits to main branch
        entry: bash -c 'branch=$(git rev-parse --abbrev-ref HEAD); if [ "$branch" = "main" ] || [ "$branch" = "master" ]; then echo "‚ùå Direct commits to main/master branch are not allowed! Create a feature branch instead."; exit 1; fi'
        language: system
        pass_filenames: false
        stages: [pre-commit]
        always_run: true

      # ============================================================================
      # PRE-COMMIT - Comprehensive linting on changed files only
      # ============================================================================
      - id: format
        name: Auto-fix formatting issues
        entry: just format
        language: system
        pass_filenames: false
        stages: [pre-commit]

      - id: lint-full-changed
        name: Run all linting checks (changed files only)
        entry: just lint-full changed
        language: system
        pass_filenames: false
        stages: [pre-commit]

      # ============================================================================
      # PRE-PUSH - Comprehensive validation on entire codebase
      # ============================================================================
      - id: pre-push-lint-full
        name: Run all linting checks (entire codebase)
        entry: just lint-full
        language: system
        pass_filenames: false
        stages: [pre-push]
        always_run: true

      - id: pre-push-test
        name: Run all tests
        entry: just test
        language: system
        pass_filenames: false
        stages: [pre-push]
        always_run: true
